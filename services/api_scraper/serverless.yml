service: webshop-api-scraper
# app and org for use with dashboard.serverless.com
app: scraper-webshop
org: patrickkompier

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  pythonRequirements:
    dockerizePip: non-linux
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Name of the SST app that's deploying our infrastructure
  sstApp: ${self:custom.stage}-webshop-scraper-infra
  # localstack:
  #   stages:
  #     # list of stages for which the plugin should be enabled
  #     - dev
  #   host: http://localhost  # optional - LocalStack host to connect to
  #   edgePort: 4566  # optional - LocalStack edge port to connect to
  #   autostart: true  # optional - Start LocalStack in Docker on Serverless deploy
  #   lambda:
  #     # Enable this flag to improve performance
  #     mountCode: True
  #   docker:
  #     # Enable this flag to run "docker ..." commands as sudo
  #     sudo: False

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
  # - serverless-localstack

provider:
  name: aws
  stage: dev
  region: eu-central-1
  runtime: python3.8
  lambdaHashingVersion: 20201221  

  environment:
    s3ResponseBucketName: !ImportValue '${self:custom.sstApp}-s3ResponseBucketName'
    BijenkorfProductSpecificationSQSTopicName: !ImportValue '${self:custom.sstApp}-BijenkorfProductSpecificationSQSTopicName'
    bijenkorfSQSArn: !ImportValue '${self:custom.sstApp}-BijenkorfProductSpecificationSQSTopicArn'

  iamRoleStatements:
  - Effect: Allow
    Action:
      - s3:GetObject
      - s3:PutObject
      - s3:ListBucket
    # Restrict our IAM role permissions to
    # the specific table for the stage
    Resource:      
      Fn::Join:
        - ""
        - - !ImportValue '${self:custom.sstApp}-s3ResponseBucketARN'
          - "/*"
  - Effect: Allow
    Action:
      - sqs:* 
    Resource:      
      Fn::Join:
        - ""
        - - !ImportValue '${self:custom.sstApp}-BijenkorfProductSpecificationSQSTopicArn'
  - Effect: Allow
    Action:
      - lambda:InvokeFunction
      - lambda:InvokeAsync
    Resource: "*"

functions:
  storeBijenkorfProductCatalog:
    timeout: 60
    handler: bijenkorf/src/store_product_catalog.store_response
    events:
      - schedule: rate(1 day)
  storeBijenkorfProductResponse:
    timeout: 60
    handler: bijenkorf/src/store_product_response.store_response    
  storeBijenkorfProductDetailResponse:
    timeout: 60
    handler: bijenkorf/src/store_product_detail_response.store_response
    events:
      - sqs: 'arn:aws:sqs:eu-central-1:390567366752:dev-webshop-scraper-infra-webscra-SaveBijenkorfProductSpecificatio-13J4BX35A2HOM'
  createProduct:
    handler: bijenkorf/src/create_product.hello
  createQueue:
    handler: bijenkorf/src/create_queue.store_response